name: Windows 10 RDP (Germany)

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Enable Remote Desktop
        run: |
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
            -Name "fDenyTSConnections" -Value 0 -Force

          # Disable Network Level Authentication
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
            -Name "UserAuthentication" -Value 0 -Force

          # Allow RDP only from your home IP
          netsh advfirewall firewall delete rule name="Allow RDP from Home" | Out-Null
          netsh advfirewall firewall add rule name="Allow RDP from Home" `
            dir=in action=allow protocol=TCP localport=3389 remoteip=105.109.103.43

          # Block all other RDP access
          netsh advfirewall firewall delete rule name="Block Other RDP Access" | Out-Null
          netsh advfirewall firewall add rule name="Block Other RDP Access" `
            dir=in action=block protocol=TCP localport=3389 remoteip=any

          # Restart RDP Service
          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          # Generate a random password
          Add-Type -AssemblyName System.Security
          $charSet = @{
              Upper   = [char[]](65..90)      # A-Z
              Lower   = [char[]](97..122)     # a-z
              Number  = [char[]](48..57)      # 0-9
              Special = ([char[]](33..47) + [char[]](58..64) +
                         [char[]](91..96) + [char[]](123..126))
          }
          $raw = @()
          $raw += $charSet.Upper | Get-Random -Count 4
          $raw += $charSet.Lower | Get-Random -Count 4
          $raw += $charSet.Number | Get-Random -Count 4
          $raw += $charSet.Special | Get-Random -Count 4
          $password = -join ($raw | Sort-Object {Get-Random})
          $secure = ConvertTo-SecureString $password -AsPlainText -Force

          New-LocalUser -Name "RDP" -Password $secure -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"

          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV
          Write-Host "✅ User 'RDP' created with password: $password"

      - name: Show Connection Info
        run: |
          $ip = (Invoke-RestMethod -Uri "https://api.ipify.org")
          Write-Host "=============================================="
          Write-Host "✅ Your Windows 10 RDP is ready!"
          Write-Host "🌍 Public IP: $ip"
          Write-Host "👤 Username: RDP"
          Write-Host "🔑 Password: $env:RDP_PASSWORD"
          Write-Host "💡 Only your home IP (105.109.103.43) can connect."
          Write-Host "=============================================="

      - name: Keep RDP Alive
        run: |
          while ($true) {
            Write-Host "[$(Get-Date)] RDP running..."
            Start-Sleep -Seconds 300
          }
